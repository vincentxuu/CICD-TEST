name: Deploy to Linode using Linode CLI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Linode CLI
        run: |
          pip install linode-cli

      - name: Verify Linode CLI Installation
        run: |
          linode-cli --version

      - name: Configure and Test Linode CLI
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
        run: |
          # 使用環境變量設置 token
          export LINODE_CLI_TOKEN
          
          # 測試 Linode CLI
          linode-cli --no-defaults linodes list

      - name: Deploy to Linode
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
          LINODE_INSTANCE_ID: ${{ secrets.LINODE_INSTANCE_ID }}
        run: |
          # 更新 Linode 實例
          linode-cli --no-defaults linodes update $LINODE_INSTANCE_ID --label "Updated Dev App Instance"

          # 使用 Linode CLI 執行遠程命令
          linode-cli --no-defaults linodes ssh $LINODE_INSTANCE_ID "cd ~/node_app && \
            git pull origin dev && \
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml down && \
            docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d"

      - name: Verify Deployment
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
          LINODE_INSTANCE_ID: ${{ secrets.LINODE_INSTANCE_ID }}
        run: |
          # 檢查應用狀態
          linode-cli --no-defaults linodes ssh $LINODE_INSTANCE_ID "docker ps"
