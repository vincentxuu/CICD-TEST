name: Deploy to Linode using Linode CLI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linode CLI
        run: pip install linode-cli
      
      - name: Verify Linode CLI Installation
        run: linode-cli --version
      
      - name: Configure and Test Linode CLI
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
        run: |
          export LINODE_CLI_TOKEN
          linode-cli --no-defaults linodes list
          
      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.LINODE_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.LINODE_INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Update Linode Instance
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
        env:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
          LINODE_INSTANCE_ID: ${{ secrets.LINODE_INSTANCE_ID }}
        run: |
          NEW_LABEL="UpdatedDevAppInstance-$(date +%Y%m%d-%H%M%S)"
          linode-cli --no-defaults linodes update $LINODE_INSTANCE_ID --label "$NEW_LABEL"
      
      - name: Ensure Docker and Directory on Linode
        env:
          LINODE_INSTANCE_IP: ${{ secrets.LINODE_INSTANCE_IP }}
          REPO_URL: ${{ secrets.REPO_URL }}
        run: |
          ssh root@$LINODE_INSTANCE_IP "
            apt-get update && 
            apt-get install -y docker.io docker-compose &&
            systemctl start docker &&
            systemctl enable docker &&
            mkdir -p /root/node_app && 
            cd /root/node_app && 
            git init && 
            git remote add origin $REPO_URL || git remote set-url origin $REPO_URL
          "
      
      - name: Deploy to Linode
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
        env:
          LINODE_INSTANCE_IP: ${{ secrets.LINODE_INSTANCE_IP }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          ssh root@$LINODE_INSTANCE_IP "
            cd /root/node_app &&
            git fetch origin dev &&
            git reset --hard origin/dev &&
            echo 'Contents of /root/node_app:' &&
            ls -la &&
            if [ -f docker-compose.yaml ] && [ -f docker-compose.override.yaml ] && [ -f .env ]; then
              echo 'Docker Compose and .env files found. Proceeding with deployment.' &&
              echo 'Contents of .env file:' &&
              set -o allexport && source .env && set +o allexport &&
              echo 'Environment variables loaded:' &&
              env | grep -E '^(PORT|NODE_ENV|MONGO_URL|REDIS_HOST|DOCKER_HUB_USERNAME|DOCKER_TAG|CONTAINER_NAME)' &&
              docker-compose version &&
              docker-compose -f docker-compose.yaml -f docker-compose.override.yaml config &&
              docker-compose -f docker-compose.yaml -f docker-compose.override.yaml down --remove-orphans &&
              docker network create nodeapp_default || true &&
              docker-compose -f docker-compose.yaml -f docker-compose.override.yaml up -d --build
            else
              echo 'Error: docker-compose files or .env file not found. Listing all yaml files:' &&
              ls -la *.yaml *.yml .env &&
              exit 1
            fi
          "
            
      - name: Verify Deployment
              if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
              env:
                LINODE_INSTANCE_IP: ${{ secrets.LINODE_INSTANCE_IP }}
              run: |
                echo "Verifying deployment"
                ssh root@$LINODE_INSTANCE_IP "
                  cd /root/node_app &&
                  docker ps &&
                  if [ -f docker-compose.yaml ] && [ -f docker-compose.override.yaml ]; then
                    docker-compose -f docker-compose.yaml -f docker-compose.override.yaml logs --tail=50
                  else
                    echo 'Warning: docker-compose files not found. Skipping logs.'
                  fi
                "